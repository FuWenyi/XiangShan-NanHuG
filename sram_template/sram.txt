FPGASoC cores: 1 banks: 1 block size: 64 bus size: 256

int wb arbiter:
[ AluExeUnit ] -> out #0
[ AluExeUnit ] -> out #1
[ LoadExu ] -> out #2
[ LoadExu ] -> out #3
[ MulDivExeUnit JmpCSRExeUnit FmiscExeUnit(buffered) ] -> arb -> out (hasFastUopOut) #4


fp wb arbiter:
[ FmacExeUnit ] -> out (hasFastUopOut) #0
[ LoadExu ] -> out #1
[ LoadExu ] -> out #2
[ FmiscExeUnit JmpCSRExeUnit(buffered) ] -> arb -> out (hasFastUopOut) #3

inter-scheduler wakeup sources for 0: List(List(2, 3), List(), List(), List(2, 3), List(), List())
inter-scheduler wakeup sources for 1: List(List(5), List(5))
inner fast: List(List(0, 1, 4), List(4), List(), List(0, 1), List(0, 1), List())
inner fast: List(List(), List())
Interrupt map (2 harts 66 interrupts):
  [1, 64] => plicSource
  [65, 65] => beu
  [66, 66] => ctrl_unit

ICache:
  ICacheSets: 64
  ICacheWays: 4
  ICacheBanks: 2
  hasPrefetch: false
(IcacheTagSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<26>,32,4,true)
(IcacheTagSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<26>,32,4,true)
(IcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<512>,32,2,true)
(IcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<512>,32,2,true)
(IcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<512>,32,2,true)
(IcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<512>,32,2,true)
miss entry ID: 0
miss entry ID: 1
prefetch entry ID: 2
prefetch entry ID: 3
release entry ID: 4
[WARN] Signal |DISPLAY_LOG_ENABLE| has multiple sinks
[WARN] Signal |logTimestamp| has multiple sinks
Cache op decoder (icache):
  Id 0
(FtbSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<80>,64,4,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<1>,256,16,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<1>,256,16,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<1>,256,16,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<1>,256,16,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<12>,256,2,true)
(BTSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<2>,2048,2,false)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<50>,128,1,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<50>,128,1,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<50>,128,1,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<50>,128,1,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<50>,128,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<50>,128,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<50>,128,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<50>,128,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<50>,128,2,true)
(FoldSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<50>,128,2,true)
[composer] bypassing output of fast pred: FauFTB
total meta size: 335


history buffer length 152
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:16, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:8, at bit 7
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:8, at bit 6
[warning] update logic of foldest history has two or more levels of xor gates! histlen:32, compLen:11, at bit 9
[warning] update logic of foldest history has two or more levels of xor gates! histlen:13, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 5
[warning] update logic of foldest history has two or more levels of xor gates! histlen:119, compLen:7, at bit 6
(FtqSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<233>,12,1,false)
(FtqSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<233>,12,1,false)
(FtqSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<233>,12,1,false)
ftq redirect SRAM: entry 233 * 12 * 3
ftq redirect SRAM: ahead fh 24 * 12 * 3
(FtqSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<512>,12,1,false)
tlb_fa: nSets1 nWays:4
tlb_fa: nSets1 nWays:2
itlb: normal page: 4 fa plru super page: 2 fa plru
(Frontend perfEvents Set,noEvent,UInt<1>(0),0)
(Frontend perfEvents Set,frontendFlush                ,NewIFU.io_perf[0].value: IO[UInt<6>],1)
(Frontend perfEvents Set,ifu_req                      ,NewIFU.io_perf[1].value: IO[UInt<6>],2)
(Frontend perfEvents Set,ifu_miss                     ,NewIFU.io_perf[2].value: IO[UInt<6>],3)
(Frontend perfEvents Set,ifu_req_cacheline_0          ,NewIFU.io_perf[3].value: IO[UInt<6>],4)
(Frontend perfEvents Set,ifu_req_cacheline_1          ,NewIFU.io_perf[4].value: IO[UInt<6>],5)
(Frontend perfEvents Set,ifu_req_cacheline_0_hit      ,NewIFU.io_perf[5].value: IO[UInt<6>],6)
(Frontend perfEvents Set,ifu_req_cacheline_1_hit      ,NewIFU.io_perf[6].value: IO[UInt<6>],7)
(Frontend perfEvents Set,only_0_hit                   ,NewIFU.io_perf[7].value: IO[UInt<6>],8)
(Frontend perfEvents Set,only_0_miss                  ,NewIFU.io_perf[8].value: IO[UInt<6>],9)
(Frontend perfEvents Set,hit_0_hit_1                  ,NewIFU.io_perf[9].value: IO[UInt<6>],10)
(Frontend perfEvents Set,hit_0_miss_1                 ,NewIFU.io_perf[10].value: IO[UInt<6>],11)
(Frontend perfEvents Set,miss_0_hit_1                 ,NewIFU.io_perf[11].value: IO[UInt<6>],12)
(Frontend perfEvents Set,miss_0_miss_1                ,NewIFU.io_perf[12].value: IO[UInt<6>],13)
(Frontend perfEvents Set,IBuffer_Flushed  ,Ibuffer.io_perf[0].value: IO[UInt<6>],14)
(Frontend perfEvents Set,IBuffer_hungry   ,Ibuffer.io_perf[1].value: IO[UInt<6>],15)
(Frontend perfEvents Set,IBuffer_1_4_valid,Ibuffer.io_perf[2].value: IO[UInt<6>],16)
(Frontend perfEvents Set,IBuffer_2_4_valid,Ibuffer.io_perf[3].value: IO[UInt<6>],17)
(Frontend perfEvents Set,IBuffer_3_4_valid,Ibuffer.io_perf[4].value: IO[UInt<6>],18)
(Frontend perfEvents Set,IBuffer_4_4_valid,Ibuffer.io_perf[5].value: IO[UInt<6>],19)
(Frontend perfEvents Set,IBuffer_full     ,Ibuffer.io_perf[6].value: IO[UInt<6>],20)
(Frontend perfEvents Set,Front_Bubble     ,Ibuffer.io_perf[7].value: IO[UInt<6>],21)
(Frontend perfEvents Set,icache_miss_cnt  ,ICache.io_perf[0].value: IO[UInt<6>],22)
(Frontend perfEvents Set,icache_miss_penalty,ICache.io_perf[1].value: IO[UInt<6>],23)
(Frontend perfEvents Set,bpu_s2_redirect        ,Ftq.io_perf[0].value: IO[UInt<6>],24)
(Frontend perfEvents Set,bpu_s3_redirect        ,Ftq.io_perf[1].value: IO[UInt<6>],25)
(Frontend perfEvents Set,bpu_to_ftq_stall       ,Ftq.io_perf[2].value: IO[UInt<6>],26)
(Frontend perfEvents Set,mispredictRedirect     ,Ftq.io_perf[3].value: IO[UInt<6>],27)
(Frontend perfEvents Set,replayRedirect         ,Ftq.io_perf[4].value: IO[UInt<6>],28)
(Frontend perfEvents Set,predecodeRedirect      ,Ftq.io_perf[5].value: IO[UInt<6>],29)
(Frontend perfEvents Set,to_ifu_bubble          ,Ftq.io_perf[6].value: IO[UInt<6>],30)
(Frontend perfEvents Set,from_bpu_real_bubble   ,Ftq.io_perf[7].value: IO[UInt<6>],31)
(Frontend perfEvents Set,BpInstr                ,Ftq.io_perf[8].value: IO[UInt<6>],32)
(Frontend perfEvents Set,BpBInstr               ,Ftq.io_perf[9].value: IO[UInt<6>],33)
(Frontend perfEvents Set,BpRight                ,Ftq.io_perf[10].value: IO[UInt<6>],34)
(Frontend perfEvents Set,BpWrong                ,Ftq.io_perf[11].value: IO[UInt<6>],35)
(Frontend perfEvents Set,BpBRight               ,Ftq.io_perf[12].value: IO[UInt<6>],36)
(Frontend perfEvents Set,BpBWrong               ,Ftq.io_perf[13].value: IO[UInt<6>],37)
(Frontend perfEvents Set,BpJRight               ,Ftq.io_perf[14].value: IO[UInt<6>],38)
(Frontend perfEvents Set,BpJWrong               ,Ftq.io_perf[15].value: IO[UInt<6>],39)
(Frontend perfEvents Set,BpIRight               ,Ftq.io_perf[16].value: IO[UInt<6>],40)
(Frontend perfEvents Set,BpIWrong               ,Ftq.io_perf[17].value: IO[UInt<6>],41)
(Frontend perfEvents Set,BpCRight               ,Ftq.io_perf[18].value: IO[UInt<6>],42)
(Frontend perfEvents Set,BpCWrong               ,Ftq.io_perf[19].value: IO[UInt<6>],43)
(Frontend perfEvents Set,BpRRight               ,Ftq.io_perf[20].value: IO[UInt<6>],44)
(Frontend perfEvents Set,BpRWrong               ,Ftq.io_perf[21].value: IO[UInt<6>],45)
(Frontend perfEvents Set,ftb_false_hit          ,Ftq.io_perf[22].value: IO[UInt<6>],46)
(Frontend perfEvents Set,ftb_hit                ,Ftq.io_perf[23].value: IO[UInt<6>],47)
(Frontend perfEvents Set,fauftb_commit_hit       ,Predictor.io_perf[0].value: IO[UInt<6>],48)
(Frontend perfEvents Set,fauftb_commit_miss      ,Predictor.io_perf[1].value: IO[UInt<6>],49)
(Frontend perfEvents Set,tage_tht_hit                  ,Predictor.io_perf[2].value: IO[UInt<6>],50)
(Frontend perfEvents Set,sc_update_on_mispred          ,Predictor.io_perf[3].value: IO[UInt<6>],51)
(Frontend perfEvents Set,sc_update_on_unconf           ,Predictor.io_perf[4].value: IO[UInt<6>],52)
(Frontend perfEvents Set,ftb_commit_hits            ,Predictor.io_perf[5].value: IO[UInt<6>],53)
(Frontend perfEvents Set,ftb_commit_misses          ,Predictor.io_perf[6].value: IO[UInt<6>],54)
(PTl2 Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<261>,4,4,true)
(PTl3 Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<334>,4,8,true)
l2tlb: a ptw, a llptw with size 6, miss queue size 10 l1:4 fa l2: nSets 4 nWays 4 l3: 4 nWays 8 blockBytes:64
ImmUnion max len: 20
Dispatch2Rs ports balance between 0 and 0
Dispatch2Rs ports balance between 1 and 1
Scheduler: 
  number of issue ports: 10
  number of replay ports: 4
  size of load and store RSes: 12
  number of std ports: 2
  number of load ports: 2
INT Regfile: 10R5W
RS 0: type AluExeUnit, size 12, enq 2, deq 2, numSrc 2, fast 5, wakeup 5
  innerIntUop: List(0, 1)
  innerFpUop: List()
  innerFastPorts: List(0, 1, 4)
  outFastPorts: List(2, 3)
  loadBalance: false
RS 1: type MulDivExeUnit, size 6, enq 2, deq 1, numSrc 2, fast 1, wakeup 5
  innerIntUop: List(1)
  innerFpUop: List()
  innerFastPorts: List(4)
  outFastPorts: List()
  loadBalance: true
RS 2: type JmpCSRExeUnit, size 6, enq 1, deq 1, numSrc 2, fast 0, wakeup 5
  innerIntUop: List()
  innerFpUop: List()
  innerFastPorts: List()
  outFastPorts: List()
  loadBalance: true
RS 3: type LoadExu, size 12, enq 2, deq 2, numSrc 1, fast 4, wakeup 5
  innerIntUop: List(0)
  innerFpUop: List()
  innerFastPorts: List(0, 1)
  outFastPorts: List(2, 3)
  loadBalance: false
RS 4: type StaExu, size 12, enq 2, deq 2, numSrc 1, fast 2, wakeup 5
  innerIntUop: List(0)
  innerFpUop: List()
  innerFastPorts: List(0, 1)
  outFastPorts: List()
  loadBalance: true
RS 5: type StdExu, size 12, enq 2, deq 2, numSrc 1, fast 0, wakeup 9
  innerIntUop: List()
  innerFpUop: List()
  innerFastPorts: List()
  outFastPorts: List()
  loadBalance: true
REGFILE: 64 entries, 10 read ports, 5 write ports
List(xiangshan.backend.fu.Alu@23036b52) List(xiangshan.backend.fu.Alu@23036b52) hasRedirect: 1
List(xiangshan.backend.fu.ArrayMultiplier@589922, xiangshan.backend.fu.DividerWrapper@2a6acb17, xiangshan.backend.fu.Bku@4a1545c1) List() hasRedirect: 0
CSR smblockctl init value:
  Store buffer replace threshold: 3
  Enable ld-ld vio check after reset: true
  Enable soft prefetch after reset: true
  Enable cache error after reset: true
(CSR perfEvents Set,Hc,CSR.hpmEvents[0].value: Wire[UInt<6>],0)
(CSR perfEvents Set,Hc,CSR.hpmEvents[1].value: Wire[UInt<6>],1)
(CSR perfEvents Set,Hc,CSR.hpmEvents[2].value: Wire[UInt<6>],2)
(CSR perfEvents Set,Hc,CSR.hpmEvents[3].value: Wire[UInt<6>],3)
(CSR perfEvents Set,Hc,CSR.hpmEvents[4].value: Wire[UInt<6>],4)
(CSR perfEvents Set,Hc,CSR.hpmEvents[5].value: Wire[UInt<6>],5)
(CSR perfEvents Set,Hc,CSR.hpmEvents[6].value: Wire[UInt<6>],6)
(CSR perfEvents Set,Hc,CSR.hpmEvents[7].value: Wire[UInt<6>],7)
(CSR perfEvents Set,Hc,CSR.hpmEvents[8].value: Wire[UInt<6>],8)
(CSR perfEvents Set,Hc,CSR.hpmEvents[9].value: Wire[UInt<6>],9)
(CSR perfEvents Set,Hc,CSR.hpmEvents[10].value: Wire[UInt<6>],10)
(CSR perfEvents Set,Hc,CSR.hpmEvents[11].value: Wire[UInt<6>],11)
(CSR perfEvents Set,Hc,CSR.hpmEvents[12].value: Wire[UInt<6>],12)
(CSR perfEvents Set,Hc,CSR.hpmEvents[13].value: Wire[UInt<6>],13)
(CSR perfEvents Set,Hc,CSR.hpmEvents[14].value: Wire[UInt<6>],14)
(CSR perfEvents Set,Hc,CSR.hpmEvents[15].value: Wire[UInt<6>],15)
(CSR perfEvents Set,Hc,CSR.hpmEvents[16].value: Wire[UInt<6>],16)
(CSR perfEvents Set,Hc,CSR.hpmEvents[17].value: Wire[UInt<6>],17)
(CSR perfEvents Set,Hc,CSR.hpmEvents[18].value: Wire[UInt<6>],18)
(CSR perfEvents Set,Hc,CSR.hpmEvents[19].value: Wire[UInt<6>],19)
(CSR perfEvents Set,Hc,CSR.hpmEvents[20].value: Wire[UInt<6>],20)
(CSR perfEvents Set,Hc,CSR.hpmEvents[21].value: Wire[UInt<6>],21)
(CSR perfEvents Set,Hc,CSR.hpmEvents[22].value: Wire[UInt<6>],22)
(CSR perfEvents Set,Hc,CSR.hpmEvents[23].value: Wire[UInt<6>],23)
(CSR perfEvents Set,Hc,CSR.hpmEvents[24].value: Wire[UInt<6>],24)
XiangShan CSR Lists
0x1 CSR.fcsr: Reg[UInt<64>]
0x2 CSR.fcsr: Reg[UInt<64>]
0x3 CSR.fcsr: Reg[UInt<64>]
0x100 CSR.mstatus: Reg[UInt<64>]
0x104 CSR.mie: Reg[UInt<64>]
0x105 CSR.stvec: Reg[UInt<64>]
0x106 CSR.scounteren: Reg[UInt<64>]
0x140 CSR.sscratch: Reg[UInt<64>]
0x141 CSR.sepc: Reg[UInt<64>]
0x142 CSR.scause: Reg[UInt<64>]
0x143 CSR.stval: Reg[UInt<64>]
0x144 CSR.?: OpResult[UInt<12>]
0x180 CSR.satp: Reg[UInt<64>]
0x300 CSR.mstatus: Reg[UInt<64>]
0x301 CSR.misa: Reg[UInt<64>]
0x302 CSR.medeleg: Reg[UInt<64>]
0x303 CSR.mideleg: Reg[UInt<64>]
0x304 CSR.mie: Reg[UInt<64>]
0x305 CSR.mtvec: Reg[UInt<64>]
0x306 CSR.mcounteren: Reg[UInt<64>]
0x320 CSR.mcountinhibit: Reg[UInt<64>]
0x323 CSR.perfEvents_0: Reg[UInt<64>]
0x324 CSR.perfEvents_1: Reg[UInt<64>]
0x325 CSR.perfEvents_2: Reg[UInt<64>]
0x326 CSR.perfEvents_3: Reg[UInt<64>]
0x327 CSR.perfEvents_4: Reg[UInt<64>]
0x328 CSR.perfEvents_5: Reg[UInt<64>]
0x329 CSR.perfEvents_6: Reg[UInt<64>]
0x32a CSR.perfEvents_7: Reg[UInt<64>]
0x32b CSR.perfEvents_8: Reg[UInt<64>]
0x32c CSR.perfEvents_9: Reg[UInt<64>]
0x32d CSR.perfEvents_10: Reg[UInt<64>]
0x32e CSR.perfEvents_11: Reg[UInt<64>]
0x32f CSR.perfEvents_12: Reg[UInt<64>]
0x330 CSR.perfEvents_13: Reg[UInt<64>]
0x331 CSR.perfEvents_14: Reg[UInt<64>]
0x332 CSR.perfEvents_15: Reg[UInt<64>]
0x333 CSR.perfEvents_16: Reg[UInt<64>]
0x334 CSR.perfEvents_17: Reg[UInt<64>]
0x335 CSR.perfEvents_18: Reg[UInt<64>]
0x336 CSR.perfEvents_19: Reg[UInt<64>]
0x337 CSR.perfEvents_20: Reg[UInt<64>]
0x338 CSR.perfEvents_21: Reg[UInt<64>]
0x339 CSR.perfEvents_22: Reg[UInt<64>]
0x33a CSR.perfEvents_23: Reg[UInt<64>]
0x33b CSR.perfEvents_24: Reg[UInt<64>]
0x33c CSR.perfEvents_25: Reg[UInt<64>]
0x33d CSR.perfEvents_26: Reg[UInt<64>]
0x33e CSR.perfEvents_27: Reg[UInt<64>]
0x33f CSR.perfEvents_28: Reg[UInt<64>]
0x340 CSR.mscratch: Reg[UInt<64>]
0x341 CSR.mepc: Reg[UInt<64>]
0x342 CSR.mcause: Reg[UInt<64>]
0x343 CSR.mtval: Reg[UInt<64>]
0x344 CSR.?: OpResult[UInt<12>]
0x3a0 CSR.cfgMerged[0]: Reg[UInt<64>]
0x3a2 CSR.cfgMerged[1]: Reg[UInt<64>]
0x3b0 CSR.addr[0]: Reg[UInt<34>]
0x3b1 CSR.addr[1]: Reg[UInt<34>]
0x3b2 CSR.addr[2]: Reg[UInt<34>]
0x3b3 CSR.addr[3]: Reg[UInt<34>]
0x3b4 CSR.addr[4]: Reg[UInt<34>]
0x3b5 CSR.addr[5]: Reg[UInt<34>]
0x3b6 CSR.addr[6]: Reg[UInt<34>]
0x3b7 CSR.addr[7]: Reg[UInt<34>]
0x3b8 CSR.addr[8]: Reg[UInt<34>]
0x3b9 CSR.addr[9]: Reg[UInt<34>]
0x3ba CSR.addr[10]: Reg[UInt<34>]
0x3bb CSR.addr[11]: Reg[UInt<34>]
0x3bc CSR.addr[12]: Reg[UInt<34>]
0x3bd CSR.addr[13]: Reg[UInt<34>]
0x3be CSR.addr[14]: Reg[UInt<34>]
0x3bf CSR.addr[15]: Reg[UInt<34>]
0x5c0 CSR.sbpctl: Reg[UInt<64>]
0x5c1 CSR.spfctl: Reg[UInt<64>]
0x5c2 CSR.slvpredctl: Reg[UInt<64>]
0x5c3 CSR.smblockctl: Reg[UInt<64>]
0x5c4 CSR.srnctl: Reg[UInt<64>]
0x5c5 CSR.?: Reg[UInt<64>]
0x5c6 CSR.?: Reg[UInt<64>]
0x5c7 CSR.?: Reg[UInt<64>]
0x5c8 CSR.?: Reg[UInt<64>]
0x5c9 CSR.?: Reg[UInt<64>]
0x5ca CSR.?: Reg[UInt<64>]
0x5cb CSR.?: Reg[UInt<64>]
0x5cc CSR.?: Reg[UInt<64>]
0x5cd CSR.?: Reg[UInt<64>]
0x5ce CSR.?: Reg[UInt<64>]
0x5cf CSR.?: Reg[UInt<64>]
0x5d0 CSR.?: Reg[UInt<64>]
0x5d1 CSR.?: Reg[UInt<64>]
0x5d2 CSR.?: Reg[UInt<64>]
0x5d3 CSR.?: Reg[UInt<64>]
0x5d4 CSR.?: Reg[UInt<64>]
0x5d5 CSR.?: Reg[UInt<64>]
0x5d6 CSR.?: Reg[UInt<64>]
0x5d7 CSR.?: Reg[UInt<64>]
0x5d8 CSR.?: Reg[UInt<64>]
0x5d9 CSR.?: Reg[UInt<64>]
0x7a0 CSR.tselectPhy: Reg[UInt<4>]
0x7a1 CSR.tdata1RegVec[tdata1RegVec]: Reg[UInt<64>]
0x7a2 CSR.tdata2RegVec[tdata2RegVec]: Reg[UInt<64>]
0x7a4 CSR.tinfo: Reg[UInt<64>]
0x7b0 CSR.dcsr: Reg[UInt<32>]
0x7b1 CSR.dpc: Reg[UInt<64>]
0x7b2 CSR.dscratch0: Reg[UInt<64>]
0x7b3 CSR.dscratch1: Reg[UInt<64>]
0x7c0 CSR.cfgMerged[0]: Reg[UInt<64>]
0x7c2 CSR.cfgMerged[1]: Reg[UInt<64>]
0x7c8 CSR.addr[0]: Reg[UInt<34>]
0x7c9 CSR.addr[1]: Reg[UInt<34>]
0x7ca CSR.addr[2]: Reg[UInt<34>]
0x7cb CSR.addr[3]: Reg[UInt<34>]
0x7cc CSR.addr[4]: Reg[UInt<34>]
0x7cd CSR.addr[5]: Reg[UInt<34>]
0x7ce CSR.addr[6]: Reg[UInt<34>]
0x7cf CSR.addr[7]: Reg[UInt<34>]
0x7d0 CSR.addr[8]: Reg[UInt<34>]
0x7d1 CSR.addr[9]: Reg[UInt<34>]
0x7d2 CSR.addr[10]: Reg[UInt<34>]
0x7d3 CSR.addr[11]: Reg[UInt<34>]
0x7d4 CSR.addr[12]: Reg[UInt<34>]
0x7d5 CSR.addr[13]: Reg[UInt<34>]
0x7d6 CSR.addr[14]: Reg[UInt<34>]
0x7d7 CSR.addr[15]: Reg[UInt<34>]
0x9c0 CSR.sdsid: Reg[UInt<64>]
0xb00 CSR.mcycle: Reg[UInt<64>]
0xb02 CSR.minstret: Reg[UInt<64>]
0xb03 CSR.perfCnts_0: Reg[UInt<64>]
0xb04 CSR.perfCnts_1: Reg[UInt<64>]
0xb05 CSR.perfCnts_2: Reg[UInt<64>]
0xb06 CSR.perfCnts_3: Reg[UInt<64>]
0xb07 CSR.perfCnts_4: Reg[UInt<64>]
0xb08 CSR.perfCnts_5: Reg[UInt<64>]
0xb09 CSR.perfCnts_6: Reg[UInt<64>]
0xb0a CSR.perfCnts_7: Reg[UInt<64>]
0xb0b CSR.perfCnts_8: Reg[UInt<64>]
0xb0c CSR.perfCnts_9: Reg[UInt<64>]
0xb0d CSR.perfCnts_10: Reg[UInt<64>]
0xb0e CSR.perfCnts_11: Reg[UInt<64>]
0xb0f CSR.perfCnts_12: Reg[UInt<64>]
0xb10 CSR.perfCnts_13: Reg[UInt<64>]
0xb11 CSR.perfCnts_14: Reg[UInt<64>]
0xb12 CSR.perfCnts_15: Reg[UInt<64>]
0xb13 CSR.perfCnts_16: Reg[UInt<64>]
0xb14 CSR.perfCnts_17: Reg[UInt<64>]
0xb15 CSR.perfCnts_18: Reg[UInt<64>]
0xb16 CSR.perfCnts_19: Reg[UInt<64>]
0xb17 CSR.perfCnts_20: Reg[UInt<64>]
0xb18 CSR.perfCnts_21: Reg[UInt<64>]
0xb19 CSR.perfCnts_22: Reg[UInt<64>]
0xb1a CSR.perfCnts_23: Reg[UInt<64>]
0xb1b CSR.perfCnts_24: Reg[UInt<64>]
0xb1c CSR.perfCnts_25: Reg[UInt<64>]
0xb1d CSR.perfCnts_26: Reg[UInt<64>]
0xb1e CSR.perfCnts_27: Reg[UInt<64>]
0xb1f CSR.perfCnts_28: Reg[UInt<64>]
0xc00 CSR.mcycle: Reg[UInt<64>]
0xc02 CSR.minstret: Reg[UInt<64>]
0xc03 CSR.perfCnts_0: Reg[UInt<64>]
0xc04 CSR.perfCnts_1: Reg[UInt<64>]
0xc05 CSR.perfCnts_2: Reg[UInt<64>]
0xc06 CSR.perfCnts_3: Reg[UInt<64>]
0xc07 CSR.perfCnts_4: Reg[UInt<64>]
0xc08 CSR.perfCnts_5: Reg[UInt<64>]
0xc09 CSR.perfCnts_6: Reg[UInt<64>]
0xc0a CSR.perfCnts_7: Reg[UInt<64>]
0xc0b CSR.perfCnts_8: Reg[UInt<64>]
0xc0c CSR.perfCnts_9: Reg[UInt<64>]
0xc0d CSR.perfCnts_10: Reg[UInt<64>]
0xc0e CSR.perfCnts_11: Reg[UInt<64>]
0xc0f CSR.perfCnts_12: Reg[UInt<64>]
0xc10 CSR.perfCnts_13: Reg[UInt<64>]
0xc11 CSR.perfCnts_14: Reg[UInt<64>]
0xc12 CSR.perfCnts_15: Reg[UInt<64>]
0xc13 CSR.perfCnts_16: Reg[UInt<64>]
0xc14 CSR.perfCnts_17: Reg[UInt<64>]
0xc15 CSR.perfCnts_18: Reg[UInt<64>]
0xc16 CSR.perfCnts_19: Reg[UInt<64>]
0xc17 CSR.perfCnts_20: Reg[UInt<64>]
0xc18 CSR.perfCnts_21: Reg[UInt<64>]
0xc19 CSR.perfCnts_22: Reg[UInt<64>]
0xc1a CSR.perfCnts_23: Reg[UInt<64>]
0xc1b CSR.perfCnts_24: Reg[UInt<64>]
0xc1c CSR.perfCnts_25: Reg[UInt<64>]
0xc1d CSR.perfCnts_26: Reg[UInt<64>]
0xc1e CSR.perfCnts_27: Reg[UInt<64>]
0xc1f CSR.perfCnts_28: Reg[UInt<64>]
0xf11 CSR.mvendorid: Reg[UInt<64>]
0xf12 CSR.marchid: Reg[UInt<64>]
0xf13 CSR.mimpid: Reg[UInt<64>]
0xf14 CSR.mhartid: Reg[UInt<64>]
0xf15 CSR.mconfigptr: Reg[UInt<64>]
WARNING: fast not implemented!! jmp will be delayed for one cycle.
WARNING: fast not implemented!! csr will be delayed for one cycle.
WARNING: fast not implemented!! fence will be delayed for one cycle.
List(xiangshan.backend.fu.Jump@63430797, xiangshan.backend.fu.CSR@5704a722, xiangshan.backend.fu.Fence@1fb06557, xiangshan.backend.fu.fpu.IntToFP@1b29445b) List(xiangshan.backend.fu.Jump@63430797) hasRedirect: 1
scheduler.writeback(0) is connected from exu AluExeUnit
scheduler.writeback(1) is connected from exu AluExeUnit
writeback from exu 0 is replaced by RegNext(rs.fastUopOut)
writeback from exu 1 is replaced by RegNext(rs.fastUopOut)
Dispatch2Rs ports balance between 0 and 0
Scheduler: 
  number of issue ports: 2
  number of replay ports: 0
  size of load and store RSes: 0
  number of std ports: 0
  number of load ports: 0
FP  Regfile: 5R4W
RS 0: type FmacExeUnit, size 6, enq 1, deq 1, numSrc 3, fast 1, wakeup 4
  innerIntUop: List()
  innerFpUop: List()
  innerFastPorts: List()
  outFastPorts: List(5)
  loadBalance: true
RS 1: type FmiscExeUnit, size 6, enq 1, deq 1, numSrc 2, fast 1, wakeup 4
  innerIntUop: List()
  innerFpUop: List()
  innerFastPorts: List()
  outFastPorts: List(5)
  loadBalance: true
REGFILE: 64 entries, 5 read ports, 4 write ports
List(xiangshan.backend.fu.fpu.FMA@34161803) List() hasRedirect: 0
List(xiangshan.backend.fu.fpu.FPToInt@5ab6c16, xiangshan.backend.fu.fpu.FPToFP@390c993a, xiangshan.backend.fu.fpu.FDivSqrt@772589c) List() hasRedirect: 0
Enable fast wakeup from function unit FmacExeUnit
scheduler.writeback(5) is connected from exu FmacExeUnit
DCache:
  DCacheSets: 64
  DCacheWays: 8
  DCacheBanks: 8
  DCacheSRAMRowBits: 64
  DCacheWordOffset: 3
  DCacheBankOffset: 3
  DCacheSetOffset: 6
  DCacheTagOffset: 12
  DCacheAboveIndexOffset: 12
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheDataSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,64,1,true)
(DcacheTagSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<24>,64,8,true)
(DcacheTagSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<24>,64,8,true)
(DcacheTagSram Width: %d, Set: %d, Way: %d, singlePort: %d
,<24>,64,8,true)
Cache op decoder (dcache):
  Id 1
List(xiangshan.backend.Std@5d537544, xiangshan.backend.Std@4bba9f02) List() hasRedirect: 0
List(xiangshan.backend.Std@a3653d2, xiangshan.backend.Std@1662481d) List() hasRedirect: 0
LoadQueue: size:20
StoreQueue: size:12
tlb_sa: nSets:16 nWays:1
tlb_fa: nSets1 nWays:4
ldtlb: normal page: 1 sa setplru super page: 4 fa plru
tlb_sa: nSets:16 nWays:1
tlb_fa: nSets1 nWays:4
sttlb: normal page: 1 sa setplru super page: 4 fa plru
(MemBlock perfEvents Set,noEvent,UInt<1>(0),0)
(MemBlock perfEvents Set,load_s0_in_fire         ,LoadUnit.io_perf[0].value: IO[UInt<6>],1)
(MemBlock perfEvents Set,load_to_load_forward    ,LoadUnit.io_perf[1].value: IO[UInt<6>],2)
(MemBlock perfEvents Set,stall_dcache            ,LoadUnit.io_perf[2].value: IO[UInt<6>],3)
(MemBlock perfEvents Set,load_s1_in_fire         ,LoadUnit.io_perf[3].value: IO[UInt<6>],4)
(MemBlock perfEvents Set,load_s1_tlb_miss        ,LoadUnit.io_perf[4].value: IO[UInt<6>],5)
(MemBlock perfEvents Set,load_s2_in_fire         ,LoadUnit.io_perf[5].value: IO[UInt<6>],6)
(MemBlock perfEvents Set,load_s2_dcache_miss     ,LoadUnit.io_perf[6].value: IO[UInt<6>],7)
(MemBlock perfEvents Set,load_s2_replay          ,LoadUnit.io_perf[7].value: IO[UInt<6>],8)
(MemBlock perfEvents Set,load_s2_replay_tlb_miss ,LoadUnit.io_perf[8].value: IO[UInt<6>],9)
(MemBlock perfEvents Set,load_s2_replay_cache    ,LoadUnit.io_perf[9].value: IO[UInt<6>],10)
(MemBlock perfEvents Set,load_s0_in_fire         ,LoadUnit_1.io_perf[0].value: IO[UInt<6>],11)
(MemBlock perfEvents Set,load_to_load_forward    ,LoadUnit_1.io_perf[1].value: IO[UInt<6>],12)
(MemBlock perfEvents Set,stall_dcache            ,LoadUnit_1.io_perf[2].value: IO[UInt<6>],13)
(MemBlock perfEvents Set,load_s1_in_fire         ,LoadUnit_1.io_perf[3].value: IO[UInt<6>],14)
(MemBlock perfEvents Set,load_s1_tlb_miss        ,LoadUnit_1.io_perf[4].value: IO[UInt<6>],15)
(MemBlock perfEvents Set,load_s2_in_fire         ,LoadUnit_1.io_perf[5].value: IO[UInt<6>],16)
(MemBlock perfEvents Set,load_s2_dcache_miss     ,LoadUnit_1.io_perf[6].value: IO[UInt<6>],17)
(MemBlock perfEvents Set,load_s2_replay          ,LoadUnit_1.io_perf[7].value: IO[UInt<6>],18)
(MemBlock perfEvents Set,load_s2_replay_tlb_miss ,LoadUnit_1.io_perf[8].value: IO[UInt<6>],19)
(MemBlock perfEvents Set,load_s2_replay_cache    ,LoadUnit_1.io_perf[9].value: IO[UInt<6>],20)
(MemBlock perfEvents Set,sbuffer_req_valid ,Sbuffer.io_perf[0].value: IO[UInt<6>],21)
(MemBlock perfEvents Set,sbuffer_req_fire  ,Sbuffer.io_perf[1].value: IO[UInt<6>],22)
(MemBlock perfEvents Set,sbuffer_merge     ,Sbuffer.io_perf[2].value: IO[UInt<6>],23)
(MemBlock perfEvents Set,sbuffer_newline   ,Sbuffer.io_perf[3].value: IO[UInt<6>],24)
(MemBlock perfEvents Set,dcache_req_valid  ,Sbuffer.io_perf[4].value: IO[UInt<6>],25)
(MemBlock perfEvents Set,dcache_req_fire   ,Sbuffer.io_perf[5].value: IO[UInt<6>],26)
(MemBlock perfEvents Set,sbuffer_idle      ,Sbuffer.io_perf[6].value: IO[UInt<6>],27)
(MemBlock perfEvents Set,sbuffer_flush     ,Sbuffer.io_perf[7].value: IO[UInt<6>],28)
(MemBlock perfEvents Set,sbuffer_replace   ,Sbuffer.io_perf[8].value: IO[UInt<6>],29)
(MemBlock perfEvents Set,mpipe_resp_valid  ,Sbuffer.io_perf[9].value: IO[UInt<6>],30)
(MemBlock perfEvents Set,refill_resp_valid ,Sbuffer.io_perf[10].value: IO[UInt<6>],31)
(MemBlock perfEvents Set,replay_resp_valid ,Sbuffer.io_perf[11].value: IO[UInt<6>],32)
(MemBlock perfEvents Set,coh_timeout       ,Sbuffer.io_perf[12].value: IO[UInt<6>],33)
(MemBlock perfEvents Set,sbuffer_1_4_valid ,Sbuffer.io_perf[13].value: IO[UInt<6>],34)
(MemBlock perfEvents Set,sbuffer_2_4_valid ,Sbuffer.io_perf[14].value: IO[UInt<6>],35)
(MemBlock perfEvents Set,sbuffer_3_4_valid ,Sbuffer.io_perf[15].value: IO[UInt<6>],36)
(MemBlock perfEvents Set,sbuffer_full_valid,Sbuffer.io_perf[16].value: IO[UInt<6>],37)
(MemBlock perfEvents Set,rollback         ,LsqWrappper.io_perf[0].value: IO[UInt<6>],38)
(MemBlock perfEvents Set,mmioCycle        ,LsqWrappper.io_perf[1].value: IO[UInt<6>],39)
(MemBlock perfEvents Set,mmio_Cnt         ,LsqWrappper.io_perf[2].value: IO[UInt<6>],40)
(MemBlock perfEvents Set,refill           ,LsqWrappper.io_perf[3].value: IO[UInt<6>],41)
(MemBlock perfEvents Set,writeback_success,LsqWrappper.io_perf[4].value: IO[UInt<6>],42)
(MemBlock perfEvents Set,writeback_blocked,LsqWrappper.io_perf[5].value: IO[UInt<6>],43)
(MemBlock perfEvents Set,ltq_1_4_valid    ,LsqWrappper.io_perf[6].value: IO[UInt<6>],44)
(MemBlock perfEvents Set,ltq_2_4_valid    ,LsqWrappper.io_perf[7].value: IO[UInt<6>],45)
(MemBlock perfEvents Set,ltq_3_4_valid    ,LsqWrappper.io_perf[8].value: IO[UInt<6>],46)
(MemBlock perfEvents Set,ltq_4_4_valid    ,LsqWrappper.io_perf[9].value: IO[UInt<6>],47)
(MemBlock perfEvents Set,mmioCycle      ,LsqWrappper.io_perf[10].value: IO[UInt<6>],48)
(MemBlock perfEvents Set,mmioCnt        ,LsqWrappper.io_perf[11].value: IO[UInt<6>],49)
(MemBlock perfEvents Set,mmio_wb_success,LsqWrappper.io_perf[12].value: IO[UInt<6>],50)
(MemBlock perfEvents Set,mmio_wb_blocked,LsqWrappper.io_perf[13].value: IO[UInt<6>],51)
(MemBlock perfEvents Set,stq_1_4_valid  ,LsqWrappper.io_perf[14].value: IO[UInt<6>],52)
(MemBlock perfEvents Set,stq_2_4_valid  ,LsqWrappper.io_perf[15].value: IO[UInt<6>],53)
(MemBlock perfEvents Set,stq_3_4_valid  ,LsqWrappper.io_perf[16].value: IO[UInt<6>],54)
(MemBlock perfEvents Set,stq_4_4_valid  ,LsqWrappper.io_perf[17].value: IO[UInt<6>],55)
(MemBlock perfEvents Set,dcache_wbq_req      ,DCacheWrapper.io_perf[0].value: IO[UInt<6>],56)
(MemBlock perfEvents Set,dcache_wbq_1_4_valid,DCacheWrapper.io_perf[1].value: IO[UInt<6>],57)
(MemBlock perfEvents Set,dcache_wbq_2_4_valid,DCacheWrapper.io_perf[2].value: IO[UInt<6>],58)
(MemBlock perfEvents Set,dcache_wbq_3_4_valid,DCacheWrapper.io_perf[3].value: IO[UInt<6>],59)
(MemBlock perfEvents Set,dcache_wbq_4_4_valid,DCacheWrapper.io_perf[4].value: IO[UInt<6>],60)
(MemBlock perfEvents Set,dcache_mp_req          ,DCacheWrapper.io_perf[5].value: IO[UInt<6>],61)
(MemBlock perfEvents Set,dcache_mp_total_penalty,DCacheWrapper.io_perf[6].value: IO[UInt<6>],62)
(MemBlock perfEvents Set,dcache_missq_req      ,DCacheWrapper.io_perf[7].value: IO[UInt<6>],63)
(MemBlock perfEvents Set,dcache_missq_1_4_valid,DCacheWrapper.io_perf[8].value: IO[UInt<6>],64)
(MemBlock perfEvents Set,dcache_missq_2_4_valid,DCacheWrapper.io_perf[9].value: IO[UInt<6>],65)
(MemBlock perfEvents Set,dcache_missq_3_4_valid,DCacheWrapper.io_perf[10].value: IO[UInt<6>],66)
(MemBlock perfEvents Set,dcache_missq_4_4_valid,DCacheWrapper.io_perf[11].value: IO[UInt<6>],67)
(MemBlock perfEvents Set,dcache_probq_req      ,DCacheWrapper.io_perf[12].value: IO[UInt<6>],68)
(MemBlock perfEvents Set,dcache_probq_1_4_valid,DCacheWrapper.io_perf[13].value: IO[UInt<6>],69)
(MemBlock perfEvents Set,dcache_probq_2_4_valid,DCacheWrapper.io_perf[14].value: IO[UInt<6>],70)
(MemBlock perfEvents Set,dcache_probq_3_4_valid,DCacheWrapper.io_perf[15].value: IO[UInt<6>],71)
(MemBlock perfEvents Set,dcache_probq_4_4_valid,DCacheWrapper.io_perf[16].value: IO[UInt<6>],72)
(MemBlock perfEvents Set,load_req                 ,DCacheWrapper.io_perf[17].value: IO[UInt<6>],73)
(MemBlock perfEvents Set,load_replay              ,DCacheWrapper.io_perf[18].value: IO[UInt<6>],74)
(MemBlock perfEvents Set,load_replay_for_data_nack,DCacheWrapper.io_perf[19].value: IO[UInt<6>],75)
(MemBlock perfEvents Set,load_replay_for_no_mshr  ,DCacheWrapper.io_perf[20].value: IO[UInt<6>],76)
(MemBlock perfEvents Set,load_replay_for_conflict ,DCacheWrapper.io_perf[21].value: IO[UInt<6>],77)
(MemBlock perfEvents Set,load_req                 ,DCacheWrapper.io_perf[22].value: IO[UInt<6>],78)
(MemBlock perfEvents Set,load_replay              ,DCacheWrapper.io_perf[23].value: IO[UInt<6>],79)
(MemBlock perfEvents Set,load_replay_for_data_nack,DCacheWrapper.io_perf[24].value: IO[UInt<6>],80)
(MemBlock perfEvents Set,load_replay_for_no_mshr  ,DCacheWrapper.io_perf[25].value: IO[UInt<6>],81)
(MemBlock perfEvents Set,load_replay_for_conflict ,DCacheWrapper.io_perf[26].value: IO[UInt<6>],82)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[0].value: IO[UInt<6>],83)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[1].value: IO[UInt<6>],84)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[2].value: IO[UInt<6>],85)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[3].value: IO[UInt<6>],86)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[4].value: IO[UInt<6>],87)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[5].value: IO[UInt<6>],88)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[6].value: IO[UInt<6>],89)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[7].value: IO[UInt<6>],90)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[8].value: IO[UInt<6>],91)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[9].value: IO[UInt<6>],92)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[10].value: IO[UInt<6>],93)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[11].value: IO[UInt<6>],94)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[12].value: IO[UInt<6>],95)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[13].value: IO[UInt<6>],96)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[14].value: IO[UInt<6>],97)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[15].value: IO[UInt<6>],98)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[16].value: IO[UInt<6>],99)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[17].value: IO[UInt<6>],100)
(MemBlock perfEvents Set,perfEventsPTW,MemBlock.io.perfEventsPTW[18].value: IO[UInt<6>],101)
(MemBlock perfEvents Set,ldDeqCount,MemBlock.ldDeqCount: OpResult[UInt<2>],102)
(MemBlock perfEvents Set,stDeqCount,MemBlock.stDeqCount: OpResult[UInt<3>],103)
Rob: size 48, numWbPorts: ListBuffer(12, 11), commitwidth: 6
exuPorts: List(List(AluExeUnit), List(AluExeUnit), List(LoadExu), List(LoadExu), List(MulDivExeUnit, JmpCSRExeUnit, FmiscExeUnit), List(FmacExeUnit), List(FmiscExeUnit, JmpCSRExeUnit), List(StaExu), List(StaExu))
stdPorts: List(List(StdExu), List(StdExu))
fflags: List(List(JmpCSRExeUnit), List(FmacExeUnit), List(FmiscExeUnit))
ExceptionGen:
  [0] List(JmpCSRExeUnit): exception List(2, 3, 8, 9, 11), flushPipe true, replayInst false
  [1] List(LoadExu): exception List(4, 5, 13), flushPipe true, replayInst true
  [2] List(LoadExu): exception List(4, 5, 13), flushPipe true, replayInst true
  [3] List(StaExu): exception List(4, 5, 6, 7, 13, 15), flushPipe false, replayInst false
  [4] List(StaExu): exception List(4, 5, 6, 7, 13, 15), flushPipe false, replayInst false
Dispatch2Rs ports balance between 0 and 0
Dispatch2Rs ports balance between 1 and 1
Dispatch2Rs ports balance between 0 and 0
(CtrlBlock perfEvents Set,noEvent,UInt<1>(0),0)
(CtrlBlock perfEvents Set,decoder_fused_instr,DecodeStage.io_perf[0].value: IO[UInt<6>],1)
(CtrlBlock perfEvents Set,decoder_waitInstr,DecodeStage.io_perf[1].value: IO[UInt<6>],2)
(CtrlBlock perfEvents Set,decoder_stall_cycle,DecodeStage.io_perf[2].value: IO[UInt<6>],3)
(CtrlBlock perfEvents Set,decoder_utilization,DecodeStage.io_perf[3].value: IO[UInt<6>],4)
(CtrlBlock perfEvents Set,rename_in                  ,Rename.io_perf[0].value: IO[UInt<6>],5)
(CtrlBlock perfEvents Set,rename_waitinstr           ,Rename.io_perf[1].value: IO[UInt<6>],6)
(CtrlBlock perfEvents Set,rename_stall_cycle_dispatch,Rename.io_perf[2].value: IO[UInt<6>],7)
(CtrlBlock perfEvents Set,rename_stall_cycle_fp      ,Rename.io_perf[3].value: IO[UInt<6>],8)
(CtrlBlock perfEvents Set,rename_stall_cycle_int     ,Rename.io_perf[4].value: IO[UInt<6>],9)
(CtrlBlock perfEvents Set,rename_stall_cycle_walk    ,Rename.io_perf[5].value: IO[UInt<6>],10)
(CtrlBlock perfEvents Set,me_freelist_1_4_valid,Rename.io_perf[6].value: IO[UInt<6>],11)
(CtrlBlock perfEvents Set,me_freelist_2_4_valid,Rename.io_perf[7].value: IO[UInt<6>],12)
(CtrlBlock perfEvents Set,me_freelist_3_4_valid,Rename.io_perf[8].value: IO[UInt<6>],13)
(CtrlBlock perfEvents Set,me_freelist_4_4_valid,Rename.io_perf[9].value: IO[UInt<6>],14)
(CtrlBlock perfEvents Set,std_freelist_1_4_valid,Rename.io_perf[10].value: IO[UInt<6>],15)
(CtrlBlock perfEvents Set,std_freelist_2_4_valid,Rename.io_perf[11].value: IO[UInt<6>],16)
(CtrlBlock perfEvents Set,std_freelist_3_4_valid,Rename.io_perf[12].value: IO[UInt<6>],17)
(CtrlBlock perfEvents Set,std_freelist_4_4_valid,Rename.io_perf[13].value: IO[UInt<6>],18)
(CtrlBlock perfEvents Set,dispatch_in,Dispatch.io_perf[0].value: IO[UInt<6>],19)
(CtrlBlock perfEvents Set,dispatch_empty,Dispatch.io_perf[1].value: IO[UInt<6>],20)
(CtrlBlock perfEvents Set,dispatch_utili,Dispatch.io_perf[2].value: IO[UInt<6>],21)
(CtrlBlock perfEvents Set,dispatch_waitinstr,Dispatch.io_perf[3].value: IO[UInt<6>],22)
(CtrlBlock perfEvents Set,dispatch_stall_cycle_lsq,Dispatch.io_perf[4].value: IO[UInt<6>],23)
(CtrlBlock perfEvents Set,dispatch_stall_cycle_rob,Dispatch.io_perf[5].value: IO[UInt<6>],24)
(CtrlBlock perfEvents Set,dispatch_stall_cycle_int_dq,Dispatch.io_perf[6].value: IO[UInt<6>],25)
(CtrlBlock perfEvents Set,dispatch_stall_cycle_fp_dq,Dispatch.io_perf[7].value: IO[UInt<6>],26)
(CtrlBlock perfEvents Set,dispatch_stall_cycle_ls_dq,Dispatch.io_perf[8].value: IO[UInt<6>],27)
(CtrlBlock perfEvents Set,dispatchq_in,DispatchQueue.io_perf[0].value: IO[UInt<6>],28)
(CtrlBlock perfEvents Set,dispatchq_out,DispatchQueue.io_perf[1].value: IO[UInt<6>],29)
(CtrlBlock perfEvents Set,dispatchq_out_try,DispatchQueue.io_perf[2].value: IO[UInt<6>],30)
(CtrlBlock perfEvents Set,dispatchq_fake_block,DispatchQueue.io_perf[3].value: IO[UInt<6>],31)
(CtrlBlock perfEvents Set,dispatchq_1_4_valid ,DispatchQueue.io_perf[4].value: IO[UInt<6>],32)
(CtrlBlock perfEvents Set,dispatchq_2_4_valid ,DispatchQueue.io_perf[5].value: IO[UInt<6>],33)
(CtrlBlock perfEvents Set,dispatchq_3_4_valid ,DispatchQueue.io_perf[6].value: IO[UInt<6>],34)
(CtrlBlock perfEvents Set,dispatchq_4_4_valid ,DispatchQueue.io_perf[7].value: IO[UInt<6>],35)
(CtrlBlock perfEvents Set,dispatchq_in,DispatchQueue_1.io_perf[0].value: IO[UInt<6>],36)
(CtrlBlock perfEvents Set,dispatchq_out,DispatchQueue_1.io_perf[1].value: IO[UInt<6>],37)
(CtrlBlock perfEvents Set,dispatchq_out_try,DispatchQueue_1.io_perf[2].value: IO[UInt<6>],38)
(CtrlBlock perfEvents Set,dispatchq_fake_block,DispatchQueue_1.io_perf[3].value: IO[UInt<6>],39)
(CtrlBlock perfEvents Set,dispatchq_1_4_valid ,DispatchQueue_1.io_perf[4].value: IO[UInt<6>],40)
(CtrlBlock perfEvents Set,dispatchq_2_4_valid ,DispatchQueue_1.io_perf[5].value: IO[UInt<6>],41)
(CtrlBlock perfEvents Set,dispatchq_3_4_valid ,DispatchQueue_1.io_perf[6].value: IO[UInt<6>],42)
(CtrlBlock perfEvents Set,dispatchq_4_4_valid ,DispatchQueue_1.io_perf[7].value: IO[UInt<6>],43)
(CtrlBlock perfEvents Set,dispatchq_in,DispatchQueue_2.io_perf[0].value: IO[UInt<6>],44)
(CtrlBlock perfEvents Set,dispatchq_out,DispatchQueue_2.io_perf[1].value: IO[UInt<6>],45)
(CtrlBlock perfEvents Set,dispatchq_out_try,DispatchQueue_2.io_perf[2].value: IO[UInt<6>],46)
(CtrlBlock perfEvents Set,dispatchq_fake_block,DispatchQueue_2.io_perf[3].value: IO[UInt<6>],47)
(CtrlBlock perfEvents Set,dispatchq_1_4_valid ,DispatchQueue_2.io_perf[4].value: IO[UInt<6>],48)
(CtrlBlock perfEvents Set,dispatchq_2_4_valid ,DispatchQueue_2.io_perf[5].value: IO[UInt<6>],49)
(CtrlBlock perfEvents Set,dispatchq_3_4_valid ,DispatchQueue_2.io_perf[6].value: IO[UInt<6>],50)
(CtrlBlock perfEvents Set,dispatchq_4_4_valid ,DispatchQueue_2.io_perf[7].value: IO[UInt<6>],51)
(CtrlBlock perfEvents Set,rob_interrupt_num      ,Rob.io_perf[0].value: IO[UInt<6>],52)
(CtrlBlock perfEvents Set,rob_exception_num      ,Rob.io_perf[1].value: IO[UInt<6>],53)
(CtrlBlock perfEvents Set,rob_flush_pipe_num     ,Rob.io_perf[2].value: IO[UInt<6>],54)
(CtrlBlock perfEvents Set,rob_replay_inst_num    ,Rob.io_perf[3].value: IO[UInt<6>],55)
(CtrlBlock perfEvents Set,rob_commitUop          ,Rob.io_perf[4].value: IO[UInt<6>],56)
(CtrlBlock perfEvents Set,rob_commitInstr        ,Rob.io_perf[5].value: IO[UInt<6>],57)
(CtrlBlock perfEvents Set,rob_commitInstrMove    ,Rob.io_perf[6].value: IO[UInt<6>],58)
(CtrlBlock perfEvents Set,rob_commitInstrFused   ,Rob.io_perf[7].value: IO[UInt<6>],59)
(CtrlBlock perfEvents Set,rob_commitInstrLoad    ,Rob.io_perf[8].value: IO[UInt<6>],60)
(CtrlBlock perfEvents Set,rob_commitInstrBranch  ,Rob.io_perf[9].value: IO[UInt<6>],61)
(CtrlBlock perfEvents Set,rob_commitInstrLoadWait,Rob.io_perf[10].value: IO[UInt<6>],62)
(CtrlBlock perfEvents Set,rob_commitInstrStore   ,Rob.io_perf[11].value: IO[UInt<6>],63)
(CtrlBlock perfEvents Set,rob_walkInstr          ,Rob.io_perf[12].value: IO[UInt<6>],64)
(CtrlBlock perfEvents Set,rob_walkCycle          ,Rob.io_perf[13].value: IO[UInt<6>],65)
(CtrlBlock perfEvents Set,rob_1_4_valid          ,Rob.io_perf[14].value: IO[UInt<6>],66)
(CtrlBlock perfEvents Set,rob_2_4_valid          ,Rob.io_perf[15].value: IO[UInt<6>],67)
(CtrlBlock perfEvents Set,rob_3_4_valid          ,Rob.io_perf[16].value: IO[UInt<6>],68)
(CtrlBlock perfEvents Set,rob_4_4_valid          ,Rob.io_perf[17].value: IO[UInt<6>],69)
(CtrlBlock perfEvents Set,perfEventsEu0,CtrlBlock.perfinfo.perfEventsEu0[0].value: IO[UInt<6>],70)
(CtrlBlock perfEvents Set,perfEventsEu0,CtrlBlock.perfinfo.perfEventsEu0[1].value: IO[UInt<6>],71)
(CtrlBlock perfEvents Set,perfEventsEu0,CtrlBlock.perfinfo.perfEventsEu0[2].value: IO[UInt<6>],72)
(CtrlBlock perfEvents Set,perfEventsEu0,CtrlBlock.perfinfo.perfEventsEu0[3].value: IO[UInt<6>],73)
(CtrlBlock perfEvents Set,perfEventsEu0,CtrlBlock.perfinfo.perfEventsEu0[4].value: IO[UInt<6>],74)
(CtrlBlock perfEvents Set,perfEventsEu0,CtrlBlock.perfinfo.perfEventsEu0[5].value: IO[UInt<6>],75)
(CtrlBlock perfEvents Set,perfEventsEu1,CtrlBlock.perfinfo.perfEventsEu1[0].value: IO[UInt<6>],76)
(CtrlBlock perfEvents Set,perfEventsEu1,CtrlBlock.perfinfo.perfEventsEu1[1].value: IO[UInt<6>],77)
(CtrlBlock perfEvents Set,perfEventsEu1,CtrlBlock.perfinfo.perfEventsEu1[2].value: IO[UInt<6>],78)
(CtrlBlock perfEvents Set,perfEventsEu1,CtrlBlock.perfinfo.perfEventsEu1[3].value: IO[UInt<6>],79)
(CtrlBlock perfEvents Set,perfEventsEu1,CtrlBlock.perfinfo.perfEventsEu1[4].value: IO[UInt<6>],80)
(CtrlBlock perfEvents Set,perfEventsEu1,CtrlBlock.perfinfo.perfEventsEu1[5].value: IO[UInt<6>],81)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[0].value: IO[UInt<6>],82)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[1].value: IO[UInt<6>],83)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[2].value: IO[UInt<6>],84)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[3].value: IO[UInt<6>],85)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[4].value: IO[UInt<6>],86)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[5].value: IO[UInt<6>],87)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[6].value: IO[UInt<6>],88)
(CtrlBlock perfEvents Set,perfEventsRs,CtrlBlock.perfinfo.perfEventsRs[7].value: IO[UInt<6>],89)
FPGAPlatform:false EnableDebug:false
====== Non-inclusive L3 (32.0KB * 1-bank) prefetch: None ======
bankBits: 0
sets:64 ways:8 blockBytes:64
[client] size:40.0KB
[client] sets:64 ways:10 blockBytes:64
blockGranularityBits: 6
usr/needHint: (1-bit)
usr/preferCache: (1-bit)
echo/blockisdirty: (1-bit)
clientBits: 2
Data ECC bits:0
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Wrap Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<64>,128,1,true)
(L3 Meta Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<4>,64,10,true)
Tag ECC bits:0
(L3 Tag Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<24>,64,10,true)
(L3 Meta Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<7>,64,8,true)
Tag ECC bits:0
(L3 Tag Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<24>,64,8,true)
(L3 Replace Sram Width: %d, Set: %d, Way: %d, singlePort: %d
,<7>,64,1,true)
        0 <= dcache
        1 <= icache
        2 <= ptw
        3 <= dma ID#0
        4 <= dma ID#1
        5 <= dma ID#2
        6 <= dma ID#3
        7 <= dma ID#4
        8 <= dma ID#5
        9 <= dma ID#6
        10 <= dma ID#7
        11 <= dma ID#8
        12 <= dma ID#9
        13 <= dma ID#10
        14 <= dma ID#11
        15 <= dma ID#12
        16 <= dma ID#13
        17 <= dma ID#14
        18 <= dma ID#15
        19 <= dma ID#16
        20 <= dma ID#17
        21 <= dma ID#18
        22 <= dma ID#19
        23 <= dma ID#20
        24 <= dma ID#21
        25 <= dma ID#22
        26 <= dma ID#23
        27 <= dma ID#24
        28 <= dma ID#25
        29 <= dma ID#26
        30 <= dma ID#27
        31 <= dma ID#28
        32 <= dma ID#29
        33 <= dma ID#30
        34 <= dma ID#31
        35 <= debug
Connection:[DISPLAY_LOG_ENABLE] type:[func] source location:[SimTop] sink location:[PTWRepeater_1]
Connection:[logTimestamp] type:[func] source location:[SimTop] sink location:[PTWRepeater_1]